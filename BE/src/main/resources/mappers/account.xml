<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.swe.buddybud.Mapper.AccountMapper">

    <!--  사용자 정보 조회  -->
    <select id="getUserInfo" resultType="java.util.Map">
        SELECT
            id,
            lang,
            gender
        FROM
            M_USER
        WHERE
            seq = #{userId}
    </select>

    <!--  사용자 작성글 목록 조회  -->
    <select id="getUserPostsList" resultType="java.util.Map">
        SELECT
            CAST(A.seq AS CHAR) AS post_no,
            A.title,
            A.content,
            M_USER.id AS post_user_id,
            CAST(M_USER.seq AS CHAR) AS post_user_no,
            CASE
                WHEN EXISTS (
                    SELECT
                        1
                    FROM
                        B_POST_LIKE B
                    WHERE
                        B.post_no = A.seq
                        AND B.user_no = #{userId}
                    ) THEN 'Y'
                    ELSE 'N'
            END AS
                like_yn,
            CAST((
                SELECT
                    COUNT(*)
                FROM
                    B_POST_LIKE B
                WHERE
                    B.post_no = A.seq
            ) AS CHAR) AS like_num,
            DATE_FORMAT(A.created_at, '%Y/%m/%d %H:%i:%s') AS created_at,
            DATE_FORMAT(A.last_modified_at, '%Y/%m/%d %H:%i:%s') AS last_modified_at
        FROM
            B_POST A
                INNER JOIN M_USER ON A.user_no = M_USER.seq
        WHERE
            A.user_no = #{userId}
            and A.state = 'Y'
        ORDER BY
            A.created_at DESC;
    </select>

    <!--  사용자 스크랩 목록 조회  -->
    <select id="getUserScrapsList" resultType="java.util.Map">
        SELECT
            CAST(A.seq AS CHAR) AS post_no,
            A.title,
            A.content,
            M_USER.id AS post_user_id,
            CAST(M_USER.seq AS CHAR) AS post_user_no,
            CASE
                WHEN EXISTS (
                    SELECT
                        1
                    FROM
                        B_SCRAP C
                    WHERE
                        C.post_no = A.seq
                        AND C.user_no = #{userId}
                ) THEN 'Y'
                ELSE 'N'
            END AS
                scrap_yn,
            CAST((
                SELECT
                    COUNT(*)
                FROM
                    B_SCRAP C
                WHERE
                    C.post_no = A.seq
            ) AS CHAR) AS scrap_num,
            CASE
                WHEN EXISTS (
                    SELECT
                        1
                    FROM
                        B_POST_LIKE B
                    WHERE
                        B.post_no = A.seq
                        AND B.user_no = #{userId}
                ) THEN 'Y'
                ELSE 'N'
                END AS like_yn,
            CAST((
                SELECT
                    COUNT(*)
                FROM
                    B_POST_LIKE B
                WHERE
                    B.post_no = A.seq
            ) AS CHAR) AS like_num,
            DATE_FORMAT(A.created_at, '%Y/%m/%d %H:%i:%s') AS created_at,
            DATE_FORMAT(A.last_modified_at, '%Y/%m/%d %H:%i:%s') AS last_modified_at
        FROM
            B_POST A
                INNER JOIN B_SCRAP B ON A.seq = B.post_no
                INNER JOIN M_USER ON A.user_no = M_USER.seq
        WHERE
            B.user_no = #{userId}
        ORDER BY
            A.created_at DESC;
    </select>

    <!--  사용자 정보 수정  -->
    <update id="updateUserInfo">
        UPDATE
            M_USER
        SET
            id = #{id},
            lang = #{lang},
            gender = #{gender}
        WHERE
            seq = #{userId};
    </update>

</mapper>