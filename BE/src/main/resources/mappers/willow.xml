<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.swe.buddybud.Mapper.WillowMapper">

    <!--  willow 신청  -->
    <insert id="sendWillow">
        INSERT INTO
            W_WILLOW (
            sender_no,
            receiver_no,
            created_at,
            state
        )
        VALUES (
            #{sender_no},
            #{receiver_no},
            sysdate(),
            'N'
       )
    </insert>

    <!--  willow 신청한 목록 조회 -->
    <select id="getSentWillowList" resultType="java.util.Map">
        SELECT
            CAST(W_WILLOW.receiver_no AS CHAR) AS receiver_no,
            DATE_FORMAT(W_WILLOW.created_at, '%Y/%m/%d %H:%i:%s') AS created_at,
            W_WILLOW.state AS state,
            M_USER.id AS receiver_id,
            M_USER.school AS receiver_school,
            M_USER.gender AS receiver_gender
        FROM
            W_WILLOW
                INNER JOIN M_USER ON W_WILLOW.receiver_no = M_USER.seq
        WHERE
            W_WILLOW.sender_no = #{userId}
    </select>

    <!--  willow 신청받은 목록 조회  -->
    <select id="getReceivedWillowList" resultType="java.util.Map">
        SELECT
            CAST(W_WILLOW.sender_no AS CHAR) AS sender_no,
            DATE_FORMAT(W_WILLOW.created_at, '%Y/%m/%d %H:%i:%s') AS created_at,
            W_WILLOW.state AS state,
            M_USER.id AS sender_id,
            M_USER.school AS sender_school,
            M_USER.gender AS sender_gender
        FROM
            W_WILLOW
                INNER JOIN M_USER ON W_WILLOW.sender_no = M_USER.seq
        WHERE
            W_WILLOW.receiver_no = #{userId}
    </select>


    <!-- 채팅 가져오기 -->
    <select id="getAllChat" resultType="java.util.Map">
        SELECT
            W_CHAT_MESSAGE.sender_no as sender, W_CHAT_MESSAGE.content as content, W_CHAT_MESSAGE.created_at as time
        FROM
            W_CHAT_ROOM JOIN W_CHAT_MESSAGE ON W_CHAT_ROOM.seq = W_CHAT_MESSAGE.chat_room_no
        WHERE
            (W_CHAT_ROOM.sender_no = #{sender_no} AND W_CHAT_ROOM.receiver_no = #{receiver_no})
        OR
            (W_CHAT_ROOM.sender_no = #{receiver_no} AND W_CHAT_ROOM.receiver_no = #{sender_no})
        ORDER BY
            created_at DESC;
    </select>

    <!-- 내 모든 윌로우 가져오기 -->
    <select id="getMyWillows" resultType="java.util.Map">
        SELECT chat.sender_no AS sender_no, chat.receiver_no AS receiver_no, user.id AS uid
        FROM W_CHAT_ROOM AS chat
        JOIN M_USER AS user ON user.seq = chat.sender_no OR user.seq = chat.receiver_no
        WHERE chat.sender_no = #{user_no} OR chat.receiver_no = #{user_no};
    </select>

    <!-- 채팅 보내기 -->
    <insert id="insertChat">
        INSERT INTO
            W_CHAT_MESSAGE (
                chat_room_no,
                sender_no,
                content,
                created_at,
            )
            VALUES (
                #{chat_room_no},
                #{sender_no},
                #{content},
                str_to_date(#{created_at}, "%Y%m%d%H%i%S"),
            )
    </insert>

    <!-- willow 승인시 채팅방 생성 -->
    <insert id="addChatRoom">
        INSERT INTO
            W_CHAT_ROOM (
                sender_no,
                receiver_no,
            )
            VALUES (
                #{sender_no},
                #{receiver_no},
            )
    </insert>

    <!-- willow 신청 승인 -->
    <update id="acceptWillow">
        UPDATE
            W_WILLOW
        SET
            state = 'Y',
        WHERE
            (sender_no = #{sender_no} AND receiver_no = #{receiver_no})
            OR
            (sender_no = #{receiver_no} AND receiver_no = #{sender_no})
    </update>
    

    <!-- willow 신청 취소/거부 -->
    <delete id="deleteWillowRequest">
        DELETE FROM
            W_WILLOW
        WHERE
            sender_no = #{sender_no} AND
            receiver_no = #{receiver_no};
    </delete>

</mapper>